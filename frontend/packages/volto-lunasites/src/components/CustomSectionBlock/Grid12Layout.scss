// Grid12Layout - 12-column CSS Grid layout styles
.grid-12-layout {
  --grid-columns: 12;
  --grid-gap: 16px;
  --grid-rows: 5;
  --min-row-height: 60px;
  
  position: relative;
  width: 100%;
  min-height: 400px; // Reasonable minimum for empty state
  
  // Main grid container
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  grid-auto-rows: var(--min-row-height); // Fixed row height for predictable grid
  gap: var(--grid-gap);
  
  // Visual refinements
  background: linear-gradient(to bottom, rgba(248, 249, 250, 0.3), transparent);
  border: 2px dashed rgba(0, 123, 193, 0.15); // Subtle dashed border like FreeformGrid
  border-radius: 8px;
  padding: calc(var(--grid-gap) + 32px) var(--grid-gap) var(--grid-gap);
  
  // Grid header
  .grid-header {
    position: absolute;
    top: 8px;
    left: var(--grid-gap);
    right: var(--grid-gap);
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 2;
    
    .grid-indicator {
      background: rgba(0, 123, 193, 0.9);
      color: white;
      padding: 4px 12px;
      border-radius: 4px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .grid-info {
      font-size: 11px;
      color: rgba(0, 123, 193, 0.7);
      font-style: italic;
    }
  }
  
  // Hide overlay when not needed
  &:not(.show-overlay) {
    .grid-overlay {
      display: none;
    }
  }
  
  // States
  &.is-dragging {
    cursor: grabbing;
  }
  
  &.is-resizing {
    cursor: nwse-resize;
  }
}

// Drop preview - shows where block will be placed
.grid-block-wrapper.drop-preview {
  background: rgba(0, 123, 193, 0.2) !important;
  border: 2px dashed rgba(0, 123, 193, 0.5) !important;
  border-radius: 4px;
  pointer-events: none;
  animation: pulse 0.8s ease-in-out infinite;
  
  @keyframes pulse {
    0%, 100% {
      opacity: 0.6;
    }
    50% {
      opacity: 0.9;
    }
  }
}

// Grid overlay
.grid-overlay {
  position: absolute;
  top: calc(var(--grid-gap) + 32px);
  left: var(--grid-gap);
  right: var(--grid-gap);
  bottom: var(--grid-gap);
  pointer-events: none;
  z-index: 0; // Behind blocks
  
  // Create visual grid
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  grid-auto-rows: var(--min-row-height); // Fixed height for visual grid cells
  gap: var(--grid-gap);
  
  .grid-cell {
    border: 1px solid rgba(0, 123, 193, 0.2);
    background: linear-gradient(135deg, 
      rgba(0, 123, 193, 0.02) 0%,
      rgba(0, 123, 193, 0.04) 100%);
    pointer-events: none; // Disabled by default
    transition: all 0.2s ease;
    border-radius: 2px;
    position: relative;
    
    // Column labels
    .grid-cell-label {
      position: absolute;
      top: 2px;
      left: 50%;
      transform: translateX(-50%);
      font-size: 10px;
      color: rgba(0, 123, 193, 0.5);
      font-weight: 600;
      pointer-events: none;
      user-select: none;
    }
    
    &.drag-over {
      // Don't highlight individual cells when we have drop preview
      // The preview shows the actual drop location
      background: rgba(0, 123, 193, 0.05);
    }
    
    &.drag-target {
      // Highlight the target cell when dragging
      background: rgba(0, 123, 193, 0.15) !important;
      border-color: rgba(0, 123, 193, 0.5) !important;
    }
    
    &.resize-affected {
      // Highlight cells that will be affected by resize
      background: linear-gradient(135deg, 
        rgba(255, 152, 0, 0.1) 0%,
        rgba(255, 152, 0, 0.15) 100%) !important;
      border-color: rgba(255, 152, 0, 0.4) !important;
      transition: all 0.15s ease;
      
      // Pulse animation for better visibility
      animation: resizePulse 1s ease-in-out infinite;
    }
  }
  
  @keyframes resizePulse {
    0%, 100% {
      opacity: 0.7;
    }
    50% {
      opacity: 1;
    }
  }
  
}

// Grid block wrapper - container for blocks with subtle visual cues
.grid-block-wrapper {
  position: relative;
  z-index: 1;
  transition: all 0.2s ease;
  // Subtle visual boundary for all blocks
  background: rgba(255, 255, 255, 0.3);
  border: 1px dashed rgba(0, 0, 0, 0.1);
  outline: none !important;
  padding: 4px;
  border-radius: 4px;
  overflow: visible;
  min-height: 0;
  height: 100%; // IMPORTANT: Fill the grid cell height
  display: flex; // Use flexbox to contain content properly
  align-items: stretch; // Stretch content to full height
  
  &:hover:not(.selected) {
    border-color: rgba(0, 123, 193, 0.3);
    background: rgba(255, 255, 255, 0.5);
    
    // Show delete button on hover
    .delete-button {
      opacity: 0.8;
    }
  }
  
  &.selected {
    border-color: rgba(0, 123, 193, 0.5);
    border-style: solid;
    background: rgba(255, 255, 255, 0.6);
    box-shadow: 0 0 0 1px rgba(0, 123, 193, 0.1);
    
    // Show delete button when selected
    .delete-button {
      opacity: 1;
    }
  }
  
  // Text blocks with auto-expanding behavior
  &.is-text-block {
    height: 100%; // Fill the allocated grid space
    min-height: var(--min-row-height);
    align-items: flex-start;
    overflow: visible; // Allow delete button to show
    position: relative;
    
    // Prominent visual outline for text blocks
    border: 2px dashed rgba(52, 152, 219, 0.5) !important;
    padding: 12px !important;
    background: rgba(52, 152, 219, 0.05);
    border-radius: 6px;
    
    &.selected {
      border-color: rgba(52, 152, 219, 0.8) !important;
      border-style: solid !important;
      border-width: 2px !important;
      background: rgba(52, 152, 219, 0.08);
      box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.15);
      
      // Ensure delete button is visible for text blocks
      .delete-button {
        opacity: 1 !important;
      }
    }
    
    &:hover:not(.selected) {
      border-color: rgba(52, 152, 219, 0.6) !important;
      background: rgba(52, 152, 219, 0.07);
    }
    
    // Content area for measurement
    .block-content {
      height: 100%;
      overflow-y: auto; // Allow scrolling if needed during transition
      overflow-x: hidden;
      
      // Hide scrollbar but keep functionality
      &::-webkit-scrollbar {
        width: 3px;
        opacity: 0;
      }
      
      &::-webkit-scrollbar-track {
        background: transparent;
      }
      
      &::-webkit-scrollbar-thumb {
        background: rgba(52, 152, 219, 0.2);
        border-radius: 2px;
      }
    }
  }
  
  // Content container - no fixed sizing
  .block-content {
    width: 100%;
    height: 100%; // IMPORTANT: Fill wrapper height for non-text blocks
    border: none !important;
    outline: none !important;
    padding: 0 !important;
    margin: 0 !important;
    background: transparent !important;
    
    // Remove all Volto block wrapper padding/margins
    .block {
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;
      height: auto !important;
      border: none !important;
      outline: none !important;
      box-shadow: none !important;
    }
    
    // Button blocks should fill their container ONLY in grid layout
    .block.__button,
    .block.button {
      // Only apply aggressive styling within grid
      display: block !important;
      width: 100% !important;
      height: 100% !important;
      padding: 0 !important;
      margin: 0 !important;
      border: none !important;
      outline: none !important;
      background: transparent !important;
      box-shadow: none !important;
      
      // Inner align div also full size in grid
      .align {
        width: 100% !important;
        height: 100% !important;
        display: block !important;
      }
      
      .ui.button,
      button {
        margin: 0;
        width: 100% !important;
        height: 100% !important;
        min-height: unset !important;
        max-height: 100% !important;
      }
    }
    
    // Text blocks expand naturally
    .block.text,
    .block.slate,
    .block.description {
      height: auto !important;
      min-height: 1em;
    }
    
    // Images size to fit
    .block.image {
      height: auto !important;
      
      img {
        max-width: 100%;
        height: auto;
        display: block;
      }
    }
  }
  
  // States
  &:hover {
    // No visual change on hover, just show controls
    .drag-handle {
      opacity: 1;
    }
  }
  
  &.selected {
    // Don't add any visual outline to the wrapper itself
    // Only show control handles
    z-index: 10;
    
    .drag-handle,
    .delete-button,
    .resize-handle {
      opacity: 1;
    }
  }
  
  &.dragging {
    opacity: 0.5; // Semi-transparent but still visible
    pointer-events: none;
    // No transform - keep original size for accurate preview
  }
  
  &.resizing {
    // Smooth transitions during resize
    transition: grid-column 0.15s ease-out, grid-row 0.15s ease-out;
    
    // Semi-transparent during resize for better visibility
    .block-content {
      opacity: 0.8;
    }
    
    .resize-handle {
      opacity: 1;
    }
  }
  
  // Drag handle - minimal style
  .drag-handle {
    position: absolute;
    top: -8px;
    left: -8px;
    cursor: grab;
    width: 20px;
    height: 20px;
    background: rgba(0, 123, 193, 0.8);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 100;
    
    svg {
      color: white;
      width: 10px;
      height: 10px;
    }
    
    &:hover {
      background: rgba(0, 123, 193, 1);
      transform: scale(1.1);
    }
    
    &:active {
      cursor: grabbing;
    }
  }
  
  // Delete button - minimal style
  .delete-button {
    position: absolute;
    top: -8px;
    right: -8px;
    width: 20px;
    height: 20px;
    background: rgba(239, 68, 68, 0.9);
    color: white;
    border: none;
    border-radius: 50%;
    font-size: 16px;
    line-height: 1;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 100;
    display: flex;
    align-items: center;
    justify-content: center;
    
    &:hover {
      background: rgba(220, 38, 38, 1);
      transform: scale(1.1);
    }
  }
  
  // Resize handles
  .resize-handle {
    position: absolute;
    background: linear-gradient(135deg, #ff9800, #ff6f00);
    opacity: 0;
    transition: all 0.2s ease;
    z-index: 100;
    
    &.right {
      top: 50%;
      right: -6px;
      width: 12px;
      height: 60px;
      transform: translateY(-50%);
      cursor: ew-resize;
      border-radius: 0 6px 6px 0;
      
      &:hover {
        width: 14px;
        right: -7px;
      }
    }
    
    &.bottom {
      bottom: -6px;
      left: 50%;
      width: 60px;
      height: 12px;
      transform: translateX(-50%);
      cursor: ns-resize;
      border-radius: 0 0 6px 6px;
      
      &:hover {
        height: 14px;
        bottom: -7px;
      }
    }
    
    &.bottom-right {
      bottom: -6px;
      right: -6px;
      width: 16px;
      height: 16px;
      cursor: nwse-resize;
      border-radius: 0 0 8px 0;
      
      &:hover {
        width: 18px;
        height: 18px;
        bottom: -7px;
        right: -7px;
      }
    }
    
    &:hover {
      opacity: 1 !important;
      background: linear-gradient(135deg, #ff6f00, #ff5722);
      box-shadow: 0 2px 8px rgba(255, 111, 0, 0.4);
    }
  }
  
  // Size indicator
  .size-indicator {
    position: absolute;
    top: -36px;
    left: 50%;
    transform: translateX(-50%);
    background: linear-gradient(135deg, 
      rgba(255, 152, 0, 0.95) 0%, 
      rgba(255, 111, 0, 0.95) 100%);
    color: white;
    padding: 6px 12px;
    border-radius: 6px;
    font-size: 13px;
    font-weight: 600;
    pointer-events: none;
    z-index: 1000;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    white-space: nowrap;
    
    .size-value {
      font-family: 'SF Mono', Monaco, monospace;
      font-weight: 700;
      font-size: 14px;
    }
    
    .size-label {
      opacity: 0.9;
      font-size: 11px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin-left: 2px;
    }
    
    .boundary-warning {
      color: #ffeb3b;
      font-size: 10px;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.3px;
      margin-left: 4px;
    }
    
    &.at-boundary {
      background: linear-gradient(135deg, 
        rgba(244, 67, 54, 0.95) 0%, 
        rgba(198, 40, 40, 0.95) 100%);
      animation: boundaryPulse 0.5s ease-in-out infinite;
    }
  }
  
  @keyframes boundaryPulse {
    0%, 100% {
      transform: translateX(-50%) scale(1);
    }
    50% {
      transform: translateX(-50%) scale(1.05);
    }
  }
}

// Empty state
.empty-state {
  grid-column: 1 / -1;
  grid-row: 1 / 3;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px;
  text-align: center;
  color: #666;
  
  p {
    margin: 0 0 8px 0;
    
    &.hint {
      font-size: 14px;
      color: #999;
    }
  }
}

// Responsive breakpoints
@media (max-width: 1023px) {
  // Tablet: 6 columns
  .grid-12-layout {
    --grid-columns: 6;
    
    .grid-block-wrapper {
      // Adjust column spans for tablet
      // This would be handled by JavaScript to maintain proportions
    }
  }
}

@media (max-width: 767px) {
  // Mobile: Stack vertically
  .grid-12-layout {
    --grid-columns: 1;
    
    .grid-block-wrapper {
      // All blocks become full width
      grid-column: 1 !important;
      // Row spans are maintained
    }
    
    // Hide overlay on mobile
    &.show-overlay {
      .grid-overlay {
        display: none;
      }
    }
    
    // Simplify controls on mobile
    .drag-handle,
    .resize-handle {
      display: none;
    }
  }
}

// Print styles
@media print {
  .grid-12-layout {
    border: none;
    background: none;
    
    .grid-overlay {
      display: none !important;
    }
    
    .grid-block-wrapper {
      box-shadow: none !important;
      
      .drag-handle,
      .delete-button,
      .resize-handle,
      .size-indicator {
        display: none !important;
      }
    }
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .grid-12-layout {
    border-color: currentColor;
    
    .grid-block-wrapper {
      // Use box-shadow for high contrast too
      &.selected {
        box-shadow: 0 0 0 2px currentColor;
      }
    }
  }
}

// Reduced motion
@media (prefers-reduced-motion: reduce) {
  .grid-12-layout {
    * {
      transition: none !important;
      animation: none !important;
    }
  }
}