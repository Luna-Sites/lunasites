// Simplified CustomSectionBlock View Styles
.custom-section-block-view {
  margin: 2rem 0;
  position: relative; // For freeform positioning
  display: block;
  clear: both;
  
  .section-title {
    margin-bottom: 1.5rem;
    font-size: 2rem;
    font-weight: 600;
    color: #333;
  }
}

// Freeform View - Absolute positioned blocks
.freeform-view {
  position: relative;
  width: 100%;
  display: block;
  // Don't use overflow hidden as it might cut content
  overflow: visible;
  
  .freeform-item {
    position: absolute;
    // Let unified-blocks.scss handle all block styling
    
    // Text blocks should expand naturally
    &.text-block {
      height: auto;
      min-height: 40px;
    }
  }
}

// Grid View - 12-column responsive grid
.grid-view {
  --grid-gap: 16px;
  
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-auto-rows: minmax(60px, auto);
  gap: var(--grid-gap);
  width: 100%;
  
  .grid-item {
    background: white;
    border-radius: 4px;
    overflow: hidden;
    
    // Allow content to expand
    & > * {
      width: 100%;
      height: 100%;
    }
  }
  
  // Responsive breakpoints
  @media (max-width: 1023px) {
    // Tablet: 6 columns
    grid-template-columns: repeat(6, 1fr);
    
    .grid-item {
      // JavaScript will handle span adjustments
    }
  }
  
  @media (max-width: 767px) {
    // Mobile: Stack vertically
    grid-template-columns: 1fr;
    
    .grid-item {
      grid-column: 1 !important;
      // Maintain row spans
    }
  }
}

// Linear View - Traditional vertical stack
.linear-view {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  
  .linear-item {
    width: 100%;
    // Let unified-blocks.scss handle block styling
  }
}

