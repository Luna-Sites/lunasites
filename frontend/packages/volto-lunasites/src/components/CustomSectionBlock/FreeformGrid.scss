// Freeform Grid - Squarespace-style free positioning
.freeform-grid {
  position: relative;
  width: 100%;
  min-height: 500px; // Good working space
  background: linear-gradient(
    to bottom,
    rgba(248, 249, 250, 0.5),
    rgba(248, 249, 250, 0.2)
  );
  border: 2px dashed rgba(0, 123, 193, 0.2);
  border-radius: 8px;
  overflow: visible; // Allow handles to show outside grid
  
  // Subtle grid pattern background for visual reference
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(rgba(0, 123, 193, 0.05) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 123, 193, 0.05) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
  }
}

// Freeform block wrapper - positioned absolutely
.freeform-block-wrapper {
  position: absolute;
  transition: box-shadow 0.2s ease, z-index 0.2s ease;
  
  // Default to content size if no explicit dimensions
  width: fit-content;
  height: fit-content;
  // Minimum sizes for interaction
  min-width: 60px;
  min-height: 40px;
  max-width: 100%;
  
  // Selected state
  &.selected {
    box-shadow: 0 0 0 2px #007bc1;
    border-radius: 4px;
    
    .drag-overlay {
      border: 2px solid #007bc1;
    }
  }
  
  // Dragging state
  &.dragging {
    opacity: 0.8;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    
    .block-content {
      pointer-events: none; // Prevent interaction while dragging
    }
  }
  
  // Resizing state
  &.resizing {
    box-shadow: 0 0 0 2px #ff9800;
    
    .block-content {
      pointer-events: none; // Prevent interaction while resizing
    }
    
    .drag-overlay {
      pointer-events: none; // Disable dragging while resizing
    }
  }
  
  // Drag overlay - invisible layer for dragging
  .drag-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 10;
    cursor: grab;
    border: 2px solid transparent;
    border-radius: 4px;
    transition: border-color 0.2s ease;
    
    &:hover {
      border-color: rgba(0, 123, 193, 0.3);
    }
    
    &:active {
      cursor: grabbing;
    }
  }
  
  // Block content container
  .block-content {
    position: relative;
    z-index: 1;
    width: 100%;
    height: 100%;
    
    // Ensure Volto blocks fill the container
    .block {
      width: 100% !important;
      height: 100% !important;
      
      // Special handling for different block types
      &.image {
        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          display: block;
        }
      }
      
      &.text,
      &.slate {
        overflow: hidden;
        
        // Scale font size based on container size
        .slate-editor {
          font-size: calc(12px + 0.5vw);
          line-height: 1.4;
        }
      }
      
      &.button,
      &.__button {
        display: flex;
        align-items: center;
        justify-content: center;
        
        .ui.button {
          flex: 1;
          height: 100%;
        }
      }
    }
  }
  
  // Delete button
  .delete-block-button {
    position: absolute;
    top: -12px;
    right: -12px;
    width: 28px;
    height: 28px;
    background: #ff4444;
    color: white;
    border: 2px solid white;
    border-radius: 50%;
    font-size: 20px;
    line-height: 1;
    cursor: pointer;
    opacity: 0;
    transition: all 0.2s ease;
    z-index: 100;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    
    &:hover {
      background: #cc0000;
      transform: scale(1.1);
    }
  }
  
  // Show delete button when selected
  &.selected .delete-block-button {
    opacity: 1;
  }
  
  // Resize handles
  .resize-handle {
    position: absolute;
    width: 12px;
    height: 12px;
    background: white;
    border: 2px solid #007bc1;
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 1000; // Higher z-index to ensure visibility
    cursor: nwse-resize;
    
    &.top-left {
      top: -6px;
      left: -6px;
      cursor: nw-resize;
    }
    
    &.top-right {
      top: -6px;
      right: -6px;
      cursor: ne-resize;
    }
    
    &.bottom-left {
      bottom: -6px;
      left: -6px;
      cursor: sw-resize;
    }
    
    &.bottom-right {
      bottom: -6px;
      right: -6px;
      cursor: se-resize;
    }
    
    &:hover {
      background: #007bc1;
    }
  }
  
  // Show resize handles when selected
  &.selected .resize-handle {
    opacity: 1;
  }
  
  // Special handling for empty image blocks (upload interface)
  &.empty-image {
    // Remove drag overlay to allow interaction with upload buttons
    .drag-overlay {
      display: none;
    }
    
    // Still allow selection
    &.selected {
      box-shadow: 0 0 0 2px #007bc1;
    }
    
    // Ensure content is interactive
    .block-content {
      pointer-events: auto !important;
      z-index: 2;
    }
  }
  
  // Size indicator during resize
  .size-indicator {
    position: absolute;
    top: -36px;
    left: 50%;
    transform: translateX(-50%);
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.8) 100%);
    color: white;
    padding: 6px 12px;
    border-radius: 6px;
    font-size: 13px;
    font-family: 'SF Mono', Monaco, monospace;
    white-space: nowrap;
    pointer-events: none;
    z-index: 1001;
    opacity: 0;
    transition: opacity 0.2s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    
    .grid-info {
      color: #4caf50;
      font-size: 11px;
      margin-left: 4px;
    }
  }
  
  // Show size indicator when resizing
  &.resizing .size-indicator {
    opacity: 1;
  }
}

// Snap guides
.snap-guide {
  position: absolute;
  background: #4caf50;
  opacity: 0;
  transition: opacity 0.15s ease;
  pointer-events: none;
  z-index: 999;
  
  &.vertical {
    width: 1px;
    top: 0;
    bottom: 0;
  }
  
  &.horizontal {
    height: 1px;
    left: 0;
    right: 0;
  }
  
  &.active {
    opacity: 0.8;
  }
}

// Empty state
.freeform-grid .empty-state {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #666;
  pointer-events: none;
  
  p {
    margin: 0.5rem 0;
    font-size: 16px;
    
    &.hint {
      font-size: 14px;
      color: #999;
    }
  }
}

// Animation for blocks appearing
@keyframes blockAppear {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.freeform-block-wrapper {
  animation: blockAppear 0.3s ease;
  
  // Smooth transitions for size changes
  &:not(.resizing) {
    transition: width 0.2s ease, height 0.2s ease;
  }
}

// Ensure proper layering
.custom-section-block-edit {
  .freeform-grid {
    position: relative;
    
    // Float add button should be on top
    & ~ .floating-add-button,
    .grid-add-button {
      z-index: 500;
    }
  }
}