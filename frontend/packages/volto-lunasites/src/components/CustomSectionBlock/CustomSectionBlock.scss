// CSS Variables
:root {
  --section-background: transparent;
  --section-title-color: inherit;
  --selected-border-color: #007bc1;
  --focus-border-color: #007bc1;
  --placeholder-color: #999;
}

// Base Section Block Styles
.custom-section-block {
  min-height: 100px;
  position: relative;
  margin-bottom: 2rem;
  border-radius: 8px;
  padding: 2rem;
  background: var(--section-background);

  .custom-section-title {
    margin-bottom: 1.5rem;
    color: var(--section-title-color);
  }
}

.custom-section-block-edit {
  border: 1px dashed transparent;
  transition: border-color 0.2s ease;

  &.selected {
    border-color: var(--selected-border-color);
  }

  // Title input field
  .custom-section-title-input {
    margin-bottom: 1rem;

    .section-title-field {
      width: 100%;
      padding: 0.5rem;
      border: 1px solid transparent;
      border-radius: 4px;
      font-size: 1.2rem;
      font-weight: 600;
      background: transparent;

      &:focus {
        outline: none;
        border-color: var(--focus-border-color, #007bc1);
        background: rgba(255, 255, 255, 0.8);
      }

      &::placeholder {
        color: var(--placeholder-color, #999);
        font-weight: normal;
      }
    }
  }

  // Content area
  .custom-section-content {
    min-height: 60px;
    position: relative;
  }

  // Empty state styling
  .custom-section-empty {
    min-height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  // Block rendering area
  .section-blocks {
    .section-child-block {
      margin-bottom: 1.5rem;

      &:last-of-type {
        margin-bottom: 1rem; // Space before add button
      }
    }

    .unknown-block {
      padding: 1rem;
      background: #fff3cd;
      border: 1px solid #ffeaa7;
      border-radius: 4px;
      color: #856404;
      font-style: italic;
    }

    // Style the add more button - override FloatingAddButton positioning
    .custom-section-add-more {
      margin-top: 1rem;
      position: relative;

      .floating-add-button-container {
        position: static !important; // Override absolute positioning
        transform: none !important; // Remove centering transform
        top: auto !important;
        left: auto !important;
        width: auto;
        min-height: auto;

        .floating-add-content {
          flex-direction: row !important; // Horizontal layout
          align-items: center;
          gap: 0.5rem;

          .floating-add-button {
            padding: 0.5rem 1rem !important; // Smaller padding for inline button
            font-size: 0.9rem !important;
            box-shadow: 0 2px 4px rgba(0, 126, 177, 0.15) !important; // Subtler shadow
          }

          .floating-helper-text {
            display: none !important; // Hide helper text for add-more button
          }
        }
      }
    }
  }
}

// Enhanced styling
.section-block.custom-section-block,
.section-block.custom-section-block-edit {
  background: rgba(248, 249, 250, 0.5);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 12px;
  padding: 2.5rem;
  margin-bottom: 2rem;

  &:hover {
    background: rgba(248, 249, 250, 0.8);
    border-color: rgba(0, 123, 193, 0.3);
  }

  &.selected {
    border-color: var(--selected-border-color);
    box-shadow: 0 0 0 2px rgba(0, 123, 193, 0.2);
  }
}

// Style integration with theme
.has-toolbar .custom-section-block-edit {
  margin-top: 1rem;
}

// Grid Layout Styles
.grid-layout {
  position: relative;

  .grid-item {
    // Minimal grid item - no container styling
    position: relative;

    // Clean styling during drag
    &.dragging {
      z-index: 1000;
      transition: none !important;

      .draggable-grid-block {
        transform: none !important;
        opacity: 0.6;
        pointer-events: none;
        border: 2px dashed rgba(0, 123, 193, 0.6) !important;
        background: rgba(0, 123, 193, 0.05) !important;
      }
    }
  }

  .grid-guide {
    transition: opacity 0.2s ease;
    opacity: 0;
  }

  &:hover .grid-guide {
    opacity: 1;
  }

  // Empty grid state
  &.empty {
    min-height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;

    .floating-add-button-container {
      position: static !important;
      transform: none !important;
    }
  }
}

// Drag & Drop Styles
%drag-handle-base {
  transition: all 0.2s ease;
  cursor: grab;

  &:hover {
    background: #005d99 !important;
    transform: scale(1.05);
    opacity: 1 !important;
  }

  &:active {
    cursor: grabbing;
    transform: scale(0.9);
  }
}

// Simple drag cursor indicator
.drag-cursor-indicator {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  user-select: none;
  
  &::before {
    content: 'ðŸ”„ ';
    margin-right: 4px;
  }
}

// Drop preview styles - shows actual block content
.drop-preview {
  transition: all 0.2s ease;
  
  &.valid {
    box-shadow: 0 4px 12px rgba(0, 123, 193, 0.3);
    transform: scale(1.02);
  }
  
  &.invalid {
    box-shadow: 0 4px 12px rgba(255, 68, 68, 0.3);
    transform: scale(0.98);
  }
  
  // Ensure preview content doesn't interfere with interactions
  * {
    pointer-events: none !important;
    user-select: none !important;
  }
}

@keyframes pulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

.draggable-block,
.draggable-grid-block {
  position: relative;

  &:hover .drag-handle {
    opacity: 1 !important;
  }

  &.selected .drag-handle {
    opacity: 1 !important;
  }

  &.dragging,
  &.being-dragged {
    z-index: 1000;

    .drag-handle {
      opacity: 1 !important;
      background: var(--selected-border-color) !important;
    }
  }

  // Original block stays in place with clear visual feedback
  &.being-dragged {
    opacity: 0.6 !important;
    transform: none !important;
    transition: opacity 0.15s ease !important;
    border: 2px dashed rgba(0, 123, 193, 0.6) !important;
    background: rgba(0, 123, 193, 0.05) !important;
    
    // Keep the block visible so user can see original position
    pointer-events: none;
  }

  .drag-handle {
    @extend %drag-handle-base;
    opacity: 0.8 !important;
  }

  .resize-handle {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    &:hover {
      background: linear-gradient(135deg, #0056b3 0%, #004080 100%) !important;
      transform: scale(1.3);
      box-shadow: 0 4px 12px rgba(0, 123, 193, 0.4) !important;
    }

    &:active {
      background: linear-gradient(135deg, #004080 0%, #003060 100%) !important;
      transform: scale(1.1);
    }
  }
}

.non-draggable-block.selected {
  outline: 2px solid var(--selected-border-color);
  outline-offset: 2px;
}

.grid-drop-zone.drop-over {
  transition: all 0.2s ease;

  &.can-drop {
    background-color: rgba(0, 123, 193, 0.05) !important;
    border-color: rgba(0, 123, 193, 0.3) !important;
  }

  &.cannot-drop {
    background-color: rgba(255, 68, 68, 0.05) !important;
    border-color: rgba(255, 68, 68, 0.3) !important;
  }
}


.grid-drag-layer {
  &:hover {
    .grid-guide {
      opacity: 0.3;
    }
  }

  // Enhanced visual feedback during drag
  &.drag-over {
    .grid-guide {
      opacity: 0.6 !important;
    }
    
    background: rgba(0, 123, 193, 0.02);
    border-color: rgba(0, 123, 193, 0.3);
  }
}

// Grid mode toggle
.grid-mode-toggle {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
  padding: 0.5rem;
  background: rgba(248, 249, 250, 0.8);
  border: 1px solid rgba(0, 123, 193, 0.2);
  border-radius: 6px;

  .toggle-label {
    font-size: 0.9rem;
    font-weight: 500;
    color: #555;
  }

  .toggle-switch {
    position: relative;
    width: 48px;
    height: 24px;
    background: #ccc;
    border-radius: 12px;
    cursor: pointer;
    transition: background 0.2s ease;

    &.active {
      background: #007bc1;
    }

    &::after {
      content: '';
      position: absolute;
      top: 2px;
      left: 2px;
      width: 20px;
      height: 20px;
      background: white;
      border-radius: 50%;
      transition: transform 0.2s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    &.active::after {
      transform: translateX(24px);
    }
  }

  .mode-label {
    font-size: 0.8rem;
    color: #666;

    &.active {
      color: #007bc1;
      font-weight: 600;
    }
  }
}

// Layout mode styles
.section-blocks {
  &.linear-layout {
    .section-child-block {
      margin-bottom: 1.5rem;

      &:last-of-type {
        margin-bottom: 1rem;
      }
    }
  }

  &.grid-layout {
    margin: 0;

    .section-child-block {
      margin: 0;
    }
  }
}

// Grid configuration panel
.grid-config-panel {
  background: rgba(248, 249, 250, 0.9);
  border: 1px solid rgba(0, 123, 193, 0.2);
  border-radius: 6px;
  padding: 1rem;
  margin-bottom: 1rem;

  .config-row {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.5rem;

    &:last-child {
      margin-bottom: 0;
    }

    label {
      font-size: 0.9rem;
      font-weight: 500;
      color: #555;
      min-width: 100px;
    }

    input {
      padding: 0.25rem 0.5rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      width: 80px;

      &:focus {
        outline: none;
        border-color: #007bc1;
      }
    }

    .config-description {
      font-size: 11px;
      color: #666;
    }
  }
}

// Draggable Grid Block Styles
.draggable-grid-block {
  position: relative;
  transition: opacity 0.15s ease; // Only animate opacity changes
  user-select: none;
  opacity: 1;
  transform: scale(1);
  
  // Remove all transforms and complex transitions during drag
  &.being-dragged {
    opacity: 0.4;
    transform: none;
    transition: opacity 0.15s ease;
  }

  .drag-handle {
    position: absolute;
    top: 4px;
    left: 4px;
    width: 28px;
    height: 22px;
    background: linear-gradient(
      135deg,
      rgba(0, 123, 193, 0.95) 0%,
      rgba(0, 86, 179, 0.95) 100%
    );
    border-radius: 8px;
    cursor: grab;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    color: white;
    opacity: 0.85; // More visible by default
    transition: all 0.2s ease;
    z-index: 20; // Higher z-index to ensure visibility
    box-shadow:
      0 4px 12px rgba(0, 123, 193, 0.3),
      0 2px 4px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border for better definition

    // Better hover state
    &:hover {
      opacity: 1;
      transform: scale(1.1);
      background: linear-gradient(
        135deg,
        rgba(0, 123, 193, 1) 0%,
        rgba(0, 86, 179, 1) 100%
      );
      box-shadow:
        0 6px 16px rgba(0, 123, 193, 0.4),
        0 3px 6px rgba(0, 0, 0, 0.2);
    }

    &:active {
      cursor: grabbing;
      transform: scale(1.05);
      transition: none;
    }

    // Ensure handle is visible even in complex layouts
    &::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: rgba(255, 255, 255, 0.9);
      border-radius: 10px;
      z-index: -1;
      opacity: 0;
      transition: opacity 0.2s ease;
    }

    &:hover::before {
      opacity: 0.3; // Subtle backdrop on hover
    }
  }

  &.selected .drag-handle,
  &:hover .drag-handle {
    opacity: 1;
    transform: scale(1.05); // Slight scale on selection/hover
  }

  // Always show handle when block is selected or being edited
  &.selected .drag-handle {
    background: linear-gradient(
      135deg,
      rgba(0, 123, 193, 1) 0%,
      rgba(0, 86, 179, 1) 100%
    );
    box-shadow:
      0 6px 16px rgba(0, 123, 193, 0.4),
      0 3px 6px rgba(0, 0, 0, 0.2);
  }

  &.being-dragged .drag-handle {
    background: linear-gradient(135deg, #007bc1 0%, #0056b3 100%);
    box-shadow:
      0 8px 20px rgba(0, 123, 193, 0.5),
      0 4px 10px rgba(0, 0, 0, 0.2);
    transition: none;
    opacity: 1;
    transform: scale(1.1);
    
    // Enhanced visibility during drag
    &::before {
      opacity: 0.5;
    }
  }

  .grid-position-info {
    position: absolute;
    bottom: 8px;
    right: 8px;
    font-size: 9px;
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.8) 0%,
      rgba(0, 0, 0, 0.9) 100%
    );
    color: white;
    padding: 3px 6px;
    border-radius: 6px;
    pointer-events: none;
    font-family: monospace;
    font-weight: 500;
    backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }
}

// Draggable Block Styles
.draggable-block {
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
  cursor: grab;
  transition: all 0.2s ease;

  &.dragging {
    cursor: grabbing;
    opacity: 0.7;
    transform: rotate(2deg);
    transition: none;
  }

  &.non-draggable-block {
    cursor: pointer;
  }

  .drag-handle {
    position: absolute;
    top: 4px;
    right: 4px;
    width: 20px;
    height: 20px;
    background: rgba(0, 123, 193, 0.8);
    border-radius: 4px;
    cursor: grab;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    color: white;
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 10;
  }

  &.selected .drag-handle,
  &:hover .drag-handle {
    opacity: 1;
  }

  .block-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .position-info {
    position: absolute;
    bottom: 4px;
    left: 4px;
    font-size: 10px;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 2px 6px;
    border-radius: 3px;
    pointer-events: none;
  }
}

// Grid Info and Add Button Styles
.grid-info {
  position: absolute;
  bottom: 60px;
  left: 16px;
  z-index: 5;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 6px 8px;
  border-radius: 4px;
  font-size: 11px;
  max-width: 250px;
  pointer-events: none;
}

.grid-add-button-container {
  position: absolute;
  bottom: 16px;
  right: 16px;
  z-index: 10;
}

// Linear Layout Block Styles
.section-child-block {
  cursor: pointer;
  border: 1px solid transparent;
  border-radius: 4px;
  padding: 0.5rem;
  margin-bottom: 1.5rem;

  &.selected {
    border: 2px solid var(--selected-border-color);
  }

  &:last-of-type {
    margin-bottom: 1rem;
  }
}

// Grid Drag Layer Styles
.grid-drag-layer {
  position: relative;
  min-height: 400px;
  cursor: default;
  transition: all 0.2s ease;

  &.drag-over {
    .drop-indicator {
      opacity: 1;
    }
  }

  .snap-preview {
    position: absolute;
    background: rgba(0, 123, 193, 0.15);
    border: 2px dashed rgba(0, 123, 193, 0.6);
    border-radius: 6px;
    pointer-events: none;
    z-index: 998;
    transition: all 0.1s ease;

    &.collision {
      background: rgba(255, 68, 68, 0.15);
      border-color: rgba(255, 68, 68, 0.6);
      
      &::after {
        content: 'Cannot drop here';
        background: rgba(255, 68, 68, 0.9);
        color: white;
      }
    }
  }

  .drop-indicator {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 123, 193, 0.02);
    border: 2px dashed rgba(0, 123, 193, 0.2);
    border-radius: 8px;
    pointer-events: none;
    z-index: 997;
    opacity: 0;
    transition: opacity 0.2s ease;
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .custom-section-block,
  .custom-section-block-edit {
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .grid-layout {
    // Force linear layout on mobile
    display: block !important;

    .grid-item {
      display: block !important;
      margin-bottom: 1rem !important;
      position: static !important;
      grid-column: unset !important;
      grid-row: unset !important;
    }
  }

  .grid-mode-toggle {
    .toggle-label,
    .mode-label {
      font-size: 0.8rem;
    }
  }
}
